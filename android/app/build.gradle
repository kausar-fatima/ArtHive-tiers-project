plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def keyProperties = new Properties()
def keyPropertiesFile = file("C:/Users/PMLS/Desktop/project/ArtHive-tiers-project/key.properties")
if (keyPropertiesFile.exists()) {
    keyPropertiesFile.withReader("UTF-8") { reader ->
        keyProperties.load(reader)
    }
} else {
    throw new FileNotFoundException("key.properties file not found")
}

// Get flutter version code and name
def flutterVersionCode = localProperties.getProperty("flutter.versionCode") ?: "1"
def flutterVersionName = localProperties.getProperty("flutter.versionName") ?: "1.0"

android {
    namespace = "arthive.com.art_hive_app"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "arthive.com.art_hive_app"
        minSdk = 23
        targetSdk = flutter.targetSdkVersion
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
    }

    signingConfigs {
        release {
            storeFile file(keyProperties.getProperty("storeFile"))
            storePassword keyProperties.getProperty("storePassword")
            keyAlias keyProperties.getProperty("keyAlias")
            keyPassword keyProperties.getProperty("keyPassword")
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true // if ProGuard/R8 is enabled
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            ndk {
            debugSymbolLevel 'FULL'
          }
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation(platform("com.google.firebase:firebase-bom:33.5.1"))
    implementation("com.google.firebase:firebase-analytics")
}

apply plugin: 'com.google.gms.google-services'
